{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,iKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,iKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,8OAAC,iKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;AACA,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,8OAAC,4LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,iKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYO,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,8OAAC,iIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,8OAAC,iIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,8OAAC;4BAAI,WAAU;;gCACZ,uBAAS,8OAAC,iIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,8OAAC,iIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,8OAAC,iIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,8OAAC,iIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config/mcp-servers.ts"],"sourcesContent":["\nimport { Brain } from 'lucide-react';\nimport type { McpServerRegistry } from '@/types/mcp';\n\nexport const MCP_SERVER_CONFIGS: McpServerRegistry = {\n  'sequential-thinking': {\n    id: 'sequential-thinking',\n    name: 'Sequential Thinking MCP',\n    description: 'An MCP server for dynamic and reflective problem-solving through a structured thinking process.',\n    processConfig: {\n      command: 'npx', // Using npx to ensure tsx is resolved\n      args: ['tsx', 'src/mcp-servers/sequential-thinking-server.ts'],\n      // cwd: process.cwd(), // Optional: specify current working directory if needed\n    },\n    icon: Brain,\n    tags: ['Problem Solving', 'AI', 'Reflection'],\n    autoConnect: true, // Attempt to connect to this server on application startup\n  },\n  // Future MCP server configurations can be added here.\n  // Example:\n  // 'filesystem': {\n  //   id: 'filesystem',\n  //   name: 'Filesystem MCP',\n  //   description: 'Provides tools for interacting with the local filesystem.',\n  //   processConfig: {\n  //     command: 'npx',\n  //     args: ['@modelcontextprotocol/server-filesystem', './workspace'], // Example path\n  //   },\n  //   icon: Folder, \n  //   tags: ['Files', 'Storage', 'Local'],\n  //   autoConnect: false,\n  // },\n};\n"],"names":[],"mappings":";;;AACA;;AAGO,MAAM,qBAAwC;IACnD,uBAAuB;QACrB,IAAI;QACJ,MAAM;QACN,aAAa;QACb,eAAe;YACb,SAAS;YACT,MAAM;gBAAC;gBAAO;aAAgD;QAEhE;QACA,MAAM,oMAAA,CAAA,QAAK;QACX,MAAM;YAAC;YAAmB;YAAM;SAAa;QAC7C,aAAa;IACf;AAeF","debugId":null}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-mcp.ts"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { getMcpManager, type MCPManager } from '@/lib/mcp-manager';\nimport type { McpTool, McpServerConfig, McpServerRegistry } from '@/types/mcp';\nimport { MCP_SERVER_CONFIGS } from '@/config/mcp-servers';\n\nexport interface UseMCPState {\n  tools: McpTool[];\n  executeTool: (serverId: string, toolName: string, args: any) => Promise<any>;\n  isConnecting: boolean;\n  error: string | null;\n  isReady: boolean;\n  connectedServers: string[];\n}\n\nexport const useMCP = (serverConfigs: McpServerRegistry = MCP_SERVER_CONFIGS): UseMCPState => {\n  const [mcpManagerInstance, setMcpManagerInstance] = useState<MCPManager | null>(null);\n  const [tools, setTools] = useState<McpTool[]>([]);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [connectedServers, setConnectedServers] = useState<string[]>([]);\n\n  const initializeMCP = useCallback(async () => {\n    setIsConnecting(true);\n    setError(null);\n    setTools([]);\n    setConnectedServers([]);\n\n    const manager = getMcpManager(); // Use the singleton instance\n\n    try {\n      const autoConnectPromises = Object.entries(serverConfigs)\n        .filter(([_, config]) => config.autoConnect)\n        .map(async ([serverId, config]) => {\n          try {\n            await manager.connectServer(serverId, config.processConfig);\n            return serverId; // Return serverId on successful connection\n          } catch (connectError) {\n            console.warn(`MCP: Could not auto-connect to ${serverId}:`, connectError);\n            return null; // Return null or handle error as needed for this server\n          }\n        });\n      \n      const successfulConnections = (await Promise.all(autoConnectPromises)).filter(id => id !== null) as string[];\n      setConnectedServers(successfulConnections);\n\n      if (successfulConnections.length > 0) {\n        const availableTools = await manager.listAvailableTools();\n        setTools(availableTools);\n      } else if (Object.values(serverConfigs).some(c => c.autoConnect)) {\n         console.warn(\"MCP: No auto-connect servers established a connection.\");\n      }\n      \n      setMcpManagerInstance(manager);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to initialize MCP';\n      console.error(\"MCP Initialization Error:\", errorMessage, err);\n      setError(errorMessage);\n      setMcpManagerInstance(null); // Ensure manager is null on error\n    } finally {\n      setIsConnecting(false);\n    }\n  }, [serverConfigs]);\n\n  useEffect(() => {\n    initializeMCP();\n\n    return () => {\n      // Cleanup: Get the current manager instance and disconnect all servers\n      // This needs careful handling if multiple useMCP instances exist,\n      // but with a singleton manager, this should be okay.\n      const manager = getMcpManager();\n      manager.disconnectAll().catch(e => console.error(\"Error during MCP disconnectAll:\", e));\n    };\n  }, [initializeMCP]); // Re-run if serverConfigs changes, though typically it won't\n\n  const executeTool = useCallback(async (\n    serverId: string,\n    toolName: string,\n    args: any\n  ): Promise<any> => {\n    if (!mcpManagerInstance) {\n      throw new Error('MCP Manager not initialized or connection failed.');\n    }\n    if (!connectedServers.includes(serverId)){\n      throw new Error(`MCP Server ${serverId} is not connected or ready.`);\n    }\n\n    try {\n      return await mcpManagerInstance.executeTool(serverId, toolName, args);\n    } catch (err) {\n      console.error(`MCP Tool execution failed for ${toolName} on ${serverId}:`, err);\n      throw err; // Re-throw to be handled by the caller\n    }\n  }, [mcpManagerInstance, connectedServers]);\n\n  return {\n    tools,\n    executeTool,\n    isConnecting,\n    error,\n    isReady: !!mcpManagerInstance && !isConnecting && connectedServers.length > 0,\n    connectedServers,\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/mcp-context.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { createContext, useContext, type ReactNode } from 'react';\nimport { useMCP, type UseMCPState } from '@/hooks/use-mcp';\nimport { MCP_SERVER_CONFIGS } from '@/config/mcp-servers'; // Ensure this path is correct\n\n// Define a default state that matches UseMCPState structure\nconst defaultMCPState: UseMCPState = {\n  tools: [],\n  executeTool: async () => { throw new Error('MCPContext not yet initialized'); },\n  isConnecting: true,\n  error: null,\n  isReady: false,\n  connectedServers: [],\n};\n\nconst MCPContext = createContext<UseMCPState>(defaultMCPState);\n\nexport const MCPProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const mcpState = useMCP(MCP_SERVER_CONFIGS); // Pass the configurations here\n\n  return (\n    <MCPContext.Provider value={mcpState}>\n      {children}\n    </MCPContext.Provider>\n  );\n};\n\nexport const useMCPContext = (): UseMCPState => {\n  const context = useContext(MCPContext);\n  if (context === undefined) {\n    throw new Error('useMCPContext must be used within an MCPProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA,6NAA2D,8BAA8B;AAJzF;;;;;AAMA,4DAA4D;AAC5D,MAAM,kBAA+B;IACnC,OAAO,EAAE;IACT,aAAa;QAAc,MAAM,IAAI,MAAM;IAAmC;IAC9E,cAAc;IACd,OAAO;IACP,SAAS;IACT,kBAAkB,EAAE;AACtB;AAEA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAe;AAEvC,MAAM,cAAiD,CAAC,EAAE,QAAQ,EAAE;IACzE,MAAM,WAAW,CAAA,GAAA,0HAAA,CAAA,SAAM,AAAD,EAAE,+HAAA,CAAA,qBAAkB,GAAG,+BAA+B;IAE5E,qBACE,8OAAC,WAAW,QAAQ;QAAC,OAAO;kBACzB;;;;;;AAGP;AAEO,MAAM,gBAAgB;IAC3B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}